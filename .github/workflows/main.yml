name: CI

on: [push]

jobs:

    tests:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: 3.10.6
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
            pip install -r requirements.txt
        - name: Test with flake8
          run: |
            python -m flake8

    build_and_push_to_docker_hub:
        name: Push Docker image to DockerHub
        runs-on: ubuntu-latest
        needs: tests
        steps:
            - name: Check out the repo
              uses: actions/checkout@v2 
            - name: Set up Docker Build
              uses: docker/setup-buildx-action@v1 
            - name: Login to Docker 
              uses: docker/login-action@v1 
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
            - name: Push to Docker Hub
              uses: docker/build-push-action@v2 
              with:
                push: true
                tags: denisktv/web
                file: fisher_news/Dockerfile
    deploy:
        runs-on: ubuntu-latest
        needs: build_and_push_to_docker_hub
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        steps:
          - name: executing remote ssh commands to deploy
            uses: appleboy/ssh-action@master
            with:
              host: ${{ secrets.HOST }}
              username: ${{ secrets.USER }}
              key: ${{ secrets.SSH_KEY }}
              passphrase: ${{ secrets.PASSPHRASE }}
              password: ${{ secrets.SERVER_PASSWORD }}
              script: |
                  cd /root/river_bot/infra/
                  sudo docker-compose stop
                  sudo docker-compose rm web
                  touch .env
                  echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
                  echo DB_NAME=${{ secrets.DB_NAME }} >> .env
                  echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
                  echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
                  echo DB_HOST=${{ secrets.DB_HOST }} >> .env
                  echo DB_PORT=${{ secrets.DB_PORT }} >> .env
                  sudo docker pull denisktv/web:latest
                  sudo docker-compose up -d
    send_message:
      runs-on: ubuntu-latest
      needs: deploy
      steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен! 